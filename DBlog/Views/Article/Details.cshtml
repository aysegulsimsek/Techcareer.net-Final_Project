@model DBlog.Entity.Article

@{
    ViewData["Title"] = "Article Details";
}

<div class="container">
    <h1>@Model.Title</h1>
    <div class="d-flex gap-2 mb-3 justify-content-end">

        @if (User.IsInRole("admin"))
        {
            <a href="@Url.Action("Edit", new { id = Model.Id })" class="btn btn-warning">Edit</a>
            <form method="post" asp-action="Delete" asp-route-id="@Model.Id"
                onsubmit="return confirm('Are you sure you want to delete this article?');">
                <button type="submit" class="btn btn-danger">Delete</button>
            </form>
        }

    </div>

    @if (!string.IsNullOrEmpty(Model.ImageFile))
    {
        <div class="mb-3">
            <img src="@Model.ImageFile" alt="@Model.Title" class="img-fluid rounded" />
        </div>
    }

    <p>@Model.Content</p>
    <p><strong>Published on:</strong> @Model.PublishedDate.ToString("MMMM dd, yyyy")</p>

    <h3>Comments</h3>

    <form id="commentForm" method="post" asp-action="AddComment">
        <input type="hidden" name="articleId" value="@Model.Id" />
        <div class="mb-3">
            <textarea name="content" class="form-control" rows="3" placeholder="Add a comment..."
                id="commentContent"></textarea>
            @if (ViewData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger mt-2" id="errorMessage">
                    @ViewData["ErrorMessage"]
                </div>
            }
        </div>
        <button type="submit" class="btn btn-primary">Add Comment</button>
    </form>

    @if (Model.Comments != null && Model.Comments.Any())
    {
        @foreach (var comment in Model.Comments.OrderByDescending(c => c.CommentDate))
        {
            <div class="mt-3 mb-3 border p-3 rounded  justify-content-between">
                <div class="d-flex">
                     @if (!string.IsNullOrEmpty(comment.User.Image))
        {
            <img class="ml-auto" src="~/img/@comment.User.Image" alt="@comment.User.UserName" style="width: 100px; height: 100px; object-fit: cover;" />
        }
                    <strong class="ml-auto"> @(comment.User.Name != null ? comment.User.Name : "Unknown")</strong>

                </div>
                <div>
                    <p class="mr-auto">
                    <p>@comment.Content</p>
                    <small>@comment.CommentDate.ToString("g")</small></p>
                </div>

            </div>
        }
    }
    else
    {
        <p>No comments yet. Be the first to comment!</p>
    }
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var errorMessage = document.getElementById('errorMessage');
            if (errorMessage) {
                alert(errorMessage.textContent);
            }

            var form = document.getElementById('commentForm');
            var commentContent = document.getElementById('commentContent');

            form.addEventListener('submit', function (event) {
                var content = commentContent.value.trim();
                if (content === '') {
                    alert('Comment content cannot be empty.');
                    event.preventDefault();
                } else if (content.length < 15 || content.length > 100) {
                    alert('Comment must be between 15 and 100 characters.');
                    event.preventDefault();
                }
            });
        });
    </script>
}
