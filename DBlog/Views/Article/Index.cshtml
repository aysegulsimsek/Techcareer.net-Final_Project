@model ArticleViewModel

@section Styles {
    <style>
        .container-fluid {
            padding: 0;
            max-width: 100%;
            display: flex;
            justify-content: center;
            border-radius: 2rem;
        }

        .row {
            display: flex;
            width: 100%;
            margin: 0;
        }

        .col-lg-8,
        .col-lg-4 {
            padding: 15px;
        }
        .cont_left{box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }
         .cont_right{box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }

        .card {
            display: flex;
            flex-direction: column;
            border-radius: 0.5rem;
            overflow: hidden;
            margin-bottom: 1rem;
            padding: 0 1rem;
            background-color: #fff;
            border: none;
            width: 100%;
        }

        .card-img-top {
            height: 15rem;
            object-fit: cover;
        }

        .card-body {
            flex: 1;
            padding: 15px;
        }

        .card-title {
            font-size: 2rem;
            margin-bottom: 0.5rem;
            color: #4c4b4b;
            text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.2);
            margin: 20px 0;
        }

        .card-text {
            margin-bottom: 1rem;
            font-family: 'Lato', sans-serif;
            color: #535353;
            text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        }

        .badge {
            display: inline-block;
            padding: 0.5rem 1rem;
            border-radius: 0.5rem;
            background-color: #007bff;
            color: #fff;
            font-weight: bold;
            transition: background-color 0.3s ease;
        }

        .badge:hover {
            background-color: #0056b3;
        }

        .tags {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 1rem;
        }

        body {
            background: linear-gradient(to bottom right, #f0f8ff, #ffffff);
            background-image: radial-gradient(circle, rgba(0, 0, 0, 0.1) 1px, transparent 1px),
                radial-gradient(circle, rgba(0, 0, 0, 0.1) 1px, transparent 1px);
            background-size: 20px 20px;
            background-position: 0 0, 10px 10px;
            color: #333;
            min-height: 400px;
        }

        footer.footer {
            background: linear-gradient(to bottom right, #e0f7fa, #ffffff);
            color: #666666;
            font-family: 'Open Sans', sans-serif;
            font-size: small;
        }
    </style>
}

<div class="container-fluid cont_left">
    <div class="row mt-4 flex-container">
        <div class="col-lg-8 col-md-8 col-sm-12">
            <div class="bg-white p-4 border mt-4  rounded">
                <h1 class="h4 mb-4 text-center">Popüler Makaleler</h1>
                @foreach (var article in Model.Articles)
                {
                    <div class="article-item">
                        <hr />
                        <div class="card bg-transparent border-0 mb-3">
                            <div class="d-flex align-items-center">
                                <div class="col-9">
                                    <h5>
                                        <a href="/article/details/@article.Url" class="w-100">@article.Title</a>
                                    </h5>
                                </div>
                                @if (article.IsActive)
                                {
                                    <div class="d-flex justify-content-end align-items-center user-select-none">
                                        <ion-icon name="checkmark-circle-outline" class="mb-3"></ion-icon>
                                        <p class="status-message">Onaylandı</p>
                                    </div>
                                }
                            </div>
                            <div class="tags mb-2">
                                @foreach (var tag in article.Tags)
                                {
                                    <a href="/article/tag/@tag.Url" class="badge bg-@tag.Color bg-opacity-5 text-white mb-2 fw-bold">
                                        @tag.Text
                                    </a>
                                }
                            </div>
                            <div class="d-flex">
                                <div class="col-4">
                                    <img src="~/img/@article.ImageFile" class="img-fluid rounded" alt="Article Image">
                                </div>
                                <div class="card-body">
                                    <p class="card-text">
                                        @Html.Raw(GetShortContent(article.Content))
                                        <a href="/article/details/@article.Url" class="">devamını oku</a>
                                    </p>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <nav class="d-flex justify-content-center">
                    <ul class="pagination" id="pagination">
                    </ul>
                </nav>
            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-12 mb-1 rounded">
            <div class="bg-white p-4 border mt-4 rounded">
                <vc:tags-menu></vc:tags-menu>
                <vc:new-posts></vc:new-posts>
            </div>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        @functions {
        private string GetShortContent(string? content, int maxLength = 150)
        {
            if (string.IsNullOrEmpty(content))
            {
                return string.Empty;
            }

            if (content.Length <= maxLength)
            {
                return content;
            }

            return content.Substring(0, maxLength) + "...";
        }
    }
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const itemsPerPage = 3;
            const articles = document.querySelectorAll(".article-item");
            const totalItems = articles.length;
            const totalPages = Math.ceil(totalItems / itemsPerPage);
            const pagination = document.getElementById("pagination");

            let currentPage = 1;

            function showPage(page) {
                articles.forEach((article, index) => {
                    article.style.display = 'none';
                });

                const startIndex = (page - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;

                for (let i = startIndex; i < endIndex && i < totalItems; i++) {
                    articles[i].style.display = 'block';
                }

                updatePagination(page);
            }

            function updatePagination(page) {
                pagination.innerHTML = '';

                for (let i = 1; i <= totalPages; i++) {
                    const li = document.createElement('li');
                    li.className = 'page-item';

                    const a = document.createElement('a');
                    a.className = 'page-link';
                    a.href = '#';
                    a.innerText = i;

                    if (i === page) {
                        a.classList.add('active');
                    }

                    a.addEventListener('click', (e) => {
                        e.preventDefault();
                        currentPage = i;
                        showPage(currentPage);
                    });

                    li.appendChild(a);
                    pagination.appendChild(li);
                }
            }

            showPage(currentPage);
        });
    </script>
}
